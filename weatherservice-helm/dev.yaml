---
# Source: weatherservice/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: weatherservice
  labels:
    helm.sh/chart: weatherservice-0.2.0
    app.kubernetes.io/name: weatherservice
    app.kubernetes.io/instance: weatherservice
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 31000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: weatherservice
    app.kubernetes.io/instance: weatherservice
---
# Source: weatherservice/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weatherservice
  labels:
    helm.sh/chart: weatherservice-0.2.0
    app.kubernetes.io/name: weatherservice
    app.kubernetes.io/instance: weatherservice
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: weatherservice
      app.kubernetes.io/instance: weatherservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: weatherservice
        app.kubernetes.io/instance: weatherservice
    spec:
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: weatherservice
          image: "tomhandlertest123.azurecr.io/weatherservice:123"
          imagePullPolicy: IfNotPresent
          env:
            - name: "ASPNETCORE_ENVIRONMENT"
              value: "Development"
            - name: "ASPNETCORE_URLS"
              value: "http://+:31000"
          ports:
            - containerPort: 31000
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /swagger
              port: http 
          readinessProbe:
            httpGet:
              path: /swagger
              port: http            
          resources:
            {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
---
# Source: weatherservice/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: weatherservice
  labels:
    helm.sh/chart: weatherservice-0.2.0
    app.kubernetes.io/name: weatherservice
    app.kubernetes.io/instance: weatherservice
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
    - host: "dev.sharedservices.firstunitedbank.com"
      http:
        paths:
          - path: /weather(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: weatherservice
                port:
                  number: 80
